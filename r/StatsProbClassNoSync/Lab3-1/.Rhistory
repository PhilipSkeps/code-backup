knitr::opts_chunk$set(echo = FALSE)
rm(list = ls()) #clear the workspace
library(mosaic, warn.conflicts = FALSE)
library(ggformula, warn.conflicts = FALSE)
pnorm(2, mean = 5, sd = 4)
pnorm(2, mean = 5, sd = 4)
pnorm(-1, mean = 0, sd = 1)
pnorm(2, mean = 5, sd = 4)
pnorm((3-5)/4, mean = 0, sd = 1)
pnorm(2, mean = 5, sd = 4)
(3-5)/4
pnorm(3, mean = 5, sd = 4)
(3-5)/4
pnorm(3, mean = 5, sd = 4)
qnorm(.3085375, mean = 5, sd = 4)
(3-5)/4
qnorm(.75, mean = 5, sd = 4)
(qnorm(.75, mean = 5, sd = 4) - 5) / 4
# generate n observations from a normal(0,1) distribution:
Ndat  <- rnorm(n = 500, mean = 0, sd = 1)
# generate n observations from a uniform(0,1) distribution:
Udat  <- runif(n = 500, min = 0, max = 1)
# generate n observations from a Binomial(50,.5) distribution
Bdat1 <- rbinom(n = 500, size = 50, prob = 0.5)
# generate n observations from a Binomial(50,.0.02) distribution
Bdat2 <- rbinom(n = 500, size = 50, prob = 0.02)
gf_histogram(~Ndat)
gf_qq(~Ndat) %>% gf_qqline()
gf_histogram(~mydata)
gf_histogram(~Udat)
gf_qq(~Udat) %>% gf_qqline()
gf_histogram(~Bdat1)
gf_qq(~Bdat1) %>% gf_qqline()
gf_histogram(~Bdat2)
gf_qq(~Bdat2) %>% gf_qqline()
gf_histogram(~Ndat)
gf_qq(~Ndat) %>% gf_qqline()
gf_histogram(~Bdat1)
gf_qq(~Bdat1) %>% gf_qqline()
# generate n observations from a normal(0,1) distribution:
Ndat  <- rnorm(n = 500, mean = 0, sd = 1)
# generate n observations from a uniform(0,1) distribution:
Udat  <- runif(n = 500, min = 0, max = 1)
# generate n observations from a Binomial(50,.5) distribution
Bdat1 <- rbinom(n = 500, size = 50, prob = 0.5)
# generate n observations from a Binomial(50,.0.02) distribution
Bdat2 <- rbinom(n = 500, size = 50, prob = 0.02)
gf_histogram(~Ndat)
gf_qq(~Ndat) %>% gf_qqline()
gf_histogram(~Bdat1)
gf_qq(~Bdat1) %>% gf_qqline()
gf_histogram(~Udat)
gf_qq(~Udat) %>% gf_qqline()
gf_histogram(~Bdat2)
gf_qq(~Bdat2) %>% gf_qqline()
# generate n observations from a normal(0,1) distribution:
Ndat  <- rnorm(n = 100, mean = 0, sd = 1)
# generate n observations from a uniform(0,1) distribution:
Udat  <- runif(n = 500, min = 0, max = 1)
# generate n observations from a Binomial(50,.5) distribution
Bdat1 <- rbinom(n = 500, size = 50, prob = 0.5)
# generate n observations from a Binomial(50,.0.02) distribution
Bdat2 <- rbinom(n = 500, size = 50, prob = 0.02)
gf_histogram(~Ndat)
gf_qq(~Ndat) %>% gf_qqline()
# generate n observations from a normal(0,1) distribution:
Ndat  <- rnorm(n = 500, mean = 0, sd = 1)
# generate n observations from a uniform(0,1) distribution:
Udat  <- runif(n = 500, min = 0, max = 1)
# generate n observations from a Binomial(50,.5) distribution
Bdat1 <- rbinom(n = 100, size = 50, prob = 0.5)
# generate n observations from a Binomial(50,.0.02) distribution
Bdat2 <- rbinom(n = 500, size = 50, prob = 0.02)
gf_histogram(~Bdat1)
gf_qq(~Bdat1) %>% gf_qqline()
# generate n observations from a normal(0,1) distribution:
Ndat  <- rnorm(n = 500, mean = 0, sd = 1)
# generate n observations from a uniform(0,1) distribution:
Udat  <- runif(n = 500, min = 0, max = 1)
# generate n observations from a Binomial(50,.5) distribution
Bdat1 <- rbinom(n = 500, size = 50, prob = 0.5)
# generate n observations from a Binomial(50,.0.02) distribution
Bdat2 <- rbinom(n = 500, size = 50, prob = 0.02)
# create the vector where we plan to store the sample means
U4 <- rep(NA,10000)
# now, define a for loop that generates the samples and stores the means in U4
for(i in 1:10000){
# generate sample
mysample <- runif(n = 4, min = 0, max = 1)
# store the sample mean in U4 in position i
U4[i] <- mean(mysample)0
# create the vector where we plan to store the sample means
U4 <- rep(NA,10000)
# now, define a for loop that generates the samples and stores the means in U4
for(i in 1:10000){
# generate sample
mysample <- runif(n = 4, min = 0, max = 1)
# store the sample mean in U4 in position i
U4[i] <- mean(mysample)
}
gf_histogram(U4)
gf_histogram(~U4)
gf_qq(~U4) %>% gf_qqline()
U4 <- rep(NA,10000)
# now, define a for loop that generates the samples and stores the means in U4
for(i in 1:10000){
# generate sample
mysample <- runif(n = 12, min = 0, max = 1)
# store the sample mean in U4 in position i
U4[i] <- mean(mysample)
}
# create the vector where we plan to store the sample means
U4 <- rep(NA,10000)
# now, define a for loop that generates the samples and stores the means in U4
for(i in 1:10000){
# generate sample
mysample <- runif(n = 4, min = 0, max = 1)
# store the sample mean in U4 in position i
U4[i] <- mean(mysample)
}
gf_histogram(~U4)
gf_qq(~U4) %>% gf_qqline()
U4 <- rep(NA,10000)
# now, define a for loop that generates the samples and stores the means in U4
for(i in 1:10000){
# generate sample
mysample <- runif(n = 12, min = 0, max = 1)
# store the sample mean in U4 in position i
U12[i] <- mean(mysample)
}
U12 <- rep(NA,10000)
# now, define a for loop that generates the samples and stores the means in U4
for(i in 1:10000){
# generate sample
mysample <- runif(n = 12, min = 0, max = 1)
# store the sample mean in U4 in position i
U12[i] <- mean(mysample)
}
gf_histogram(~U12)
gf_qq(~U12) %>% gf_qqline()
U30 <- rep(NA,10000)
# now, define a for loop that generates the samples and stores the means in U4
for(i in 1:10000){
# generate sample
mysample <- runif(n = 30, min = 0, max = 1)
# store the sample mean in U4 in position i
U30[i] <- mean(mysample)
}
gf_histogram(~U30)
gf_qq(~U30) %>% gf_qqline()
# create the vector where we plan to store the sample means
U4 <- rep(NA,100000)
# now, define a for loop that generates the samples and stores the means in U4
for(i in 1:100000){
# generate sample
mysample <- runif(n = 4, min = 0, max = 1)
# store the sample mean in U4 in position i
U4[i] <- mean(mysample)
}
gf_histogram(~U4)
gf_qq(~U4) %>% gf_qqline()
# create the vector where we plan to store the sample means
E4 <- rep(NA,10000)
# now, define a for loop that generates the samples and stores the means in E4
for(i in 1:10000){
# generate sample
mysample <- rexp(n = 4, rate = 1)
# store the sample mean in E4 in position i
E4[i] <- mean(mysample)
}
gf_histogram(~E4)
gf_qq(~E4) %>% gf_qqline()
# create the vector where we plan to store the sample means
E30 <- rep(NA,10000)
# now, define a for loop that generates the samples and stores the means in E4
for(i in 1:10000){
# generate sample
mysample <- rexp(n = 30, rate = 1)
# store the sample mean in E4 in position i
E4[i] <- mean(mysample)
}
gf_histogram(~E30)
# create the vector where we plan to store the sample means
E30 <- rep(NA,10000)
# now, define a for loop that generates the samples and stores the means in E4
for(i in 1:10000){
# generate sample
mysample <- rexp(n = 30, rate = 1)
# store the sample mean in E4 in position i
E30[i] <- mean(mysample)
}
gf_histogram(~E30)
gf_qq(~E30) %>% gf_qqline()
# create the vector where we plan to store the sample means
E100 <- rep(NA,10000)
# now, define a for loop that generates the samples and stores the means in E4
for(i in 1:10000){
# generate sample
mysample <- rexp(n = 100, rate = 1)
# store the sample mean in E4 in position i
E100[i] <- mean(mysample)
}
gf_histogram(~E100)
gf_qq(~E100) %>% gf_qqline()
# create the vector where we plan to store the sample means
E100 <- rep(NA,100000)
# now, define a for loop that generates the samples and stores the means in E4
for(i in 1:100000){
# generate sample
mysample <- rexp(n = 100, rate = 1)
# store the sample mean in E4 in position i
E100[i] <- mean(mysample)
}
gf_histogram(~E100)
gf_qq(~E100) %>% gf_qqline()
# create the vector where we plan to store the sample means
E100 <- rep(NA,10000)
# now, define a for loop that generates the samples and stores the means in E4
for(i in 1:10000){
# generate sample
mysample <- rexp(n = 100, rate = 1)
# store the sample mean in E4 in position i
E100[i] <- mean(mysample)
}
gf_histogram(~E100)
gf_qq(~E100) %>% gf_qqline()
# create the vector where we plan to store the sample means
E100 <- rep(NA,10000)
# now, define a for loop that generates the samples and stores the means in E4
for(i in 1:10000){
# generate sample
mysample <- rexp(n = 10000, rate = 1)
# store the sample mean in E4 in position i
E100[i] <- mean(mysample)
}
gf_histogram(~E100)
gf_qq(~E100) %>% gf_qqline()
# create the vector where we plan to store the sample means
E100 <- rep(NA,10000)
# now, define a for loop that generates the samples and stores the means in E4
for(i in 1:10000){
# generate sample
mysample <- rexp(n = 100, rate = 1)
# store the sample mean in E4 in position i
E100[i] <- mean(mysample)
}
gf_histogram(~E100)
gf_qq(~E100) %>% gf_qqline()
