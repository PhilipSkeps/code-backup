knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) #clear the workspace
library(mosaic)
library(ggformula)
mysample <- rbinom(50, size = 35, prob = 0.25)
mysample
gf_histogram(~mysample)
gf_boxplot(~mysample)
favstats(mysample)
sum(mysample<13)
sum(mysample<13)
48 / 50
pbinom(q = 12, size = 35, prob = 0.25) #calculates P(X <= 12), same as P(X<13)
fivesamples <- data.frame(matrix(rbinom(50*5, size = 35, prob = 0.25), nrow = 50, ncol = 5))
my_prob_13 <- function(x){sum(x<13)/length(x)} # define a function that calculates observed probability for a sample
lapply(fivesamples,my_prob_13) # apply the function and calculate observed probability for each of your five samples
fivesamples <- data.frame(matrix(rbinom(50*5, size = 35, prob = 0.25), nrow = 50, ncol = 5))
my_prob_13 <- function(x){sum(x<13)/length(x)} # define a function that calculates observed probability for a sample
lapply(fivesamples,my_prob_13) # apply the function and calculate observed probability for each of your five samples
(0.9 + 0.92 + 0.96 + 0.86 + 0.86) / 5
fivesamples <- data.frame(matrix(rbinom(50*5, size = 35, prob = 0.25), nrow = 50, ncol = 5))
my_prob_13 <- function(x){sum(x<13)/length(x)} # define a function that calculates observed probability for a sample
lapply(fivesamples,my_prob_13) # apply the function and calculate observed probability for each of your five samples
(0.9 + 0.92 + 0.96 + 0.86 + 0.86) / 5
fivesamples <- data.frame(matrix(rbinom(50*5, size = 35, prob = 0.25), nrow = 50, ncol = 5))
my_prob_13 <- function(x){sum(x<13)/length(x)} # define a function that calculates observed probability for a sample
lapply(fivesamples,my_prob_13) # apply the function and calculate observed probability for each of your five samples
(0.9 + 0.92 + 0.96 + 0.86 + 0.86) / 5
fivesamples <- data.frame(matrix(rbinom(50*5, size = 35, prob = 0.25), nrow = 50, ncol = 5))
my_prob_13 <- function(x){sum(x<13)/length(x)} # define a function that calculates observed probability for a sample
lapply(fivesamples,my_prob_13) # apply the function and calculate observed probability for each of your five samples
(0.9 + 0.92 + 0.96 + 0.86 + 0.86) / 5
fivesamples <- data.frame(matrix(rbinom(50*5, size = 35, prob = 0.25), nrow = 50, ncol = 5))
my_prob_13 <- function(x){sum(x<13)/length(x)} # define a function that calculates observed probability for a sample
lapply(fivesamples,my_prob_13) # apply the function and calculate observed probability for each of your five samples
(0.9 + 0.92 + 0.96 + 0.86 + 0.86) / 5
fivesamples <- data.frame(matrix(rbinom(50*5, size = 35, prob = 0.25), nrow = 50, ncol = 5))
my_prob_13 <- function(x){sum(x<13)/length(x)} # define a function that calculates observed probability for a sample
lapply(fivesamples,my_prob_13) # apply the function and calculate observed probability for each of your five samples
(0.9 + 0.92 + 0.96 + 0.86 + 0.86) / 5
fivesamples <- data.frame(matrix(rbinom(50*5, size = 35, prob = 0.25), nrow = 50, ncol = 5))
my_prob_13 <- function(x){sum(x<13)/length(x)} # define a function that calculates observed probability for a sample
lapply(fivesamples,my_prob_13) # apply the function and calculate observed probability for each of your five samples
(0.9 + 0.92 + 0.96 + 0.86 + 0.86) / 5
fivesamples <- data.frame(matrix(rbinom(50*5, size = 35, prob = 0.25), nrow = 50, ncol = 5))
my_prob_13 <- function(x){sum(x<13)/length(x)} # define a function that calculates observed probability for a sample
lapply(fivesamples,my_prob_13) # apply the function and calculate observed probability for each of your five samples
(0.9 + 0.92 + 0.96 + 0.86 + 0.86) / 5
fivesamples <- data.frame(matrix(rbinom(50*5, size = 35, prob = 0.25), nrow = 50, ncol = 5))
my_prob_13 <- function(x){sum(x<13)/length(x)} # define a function that calculates observed probability for a sample
lapply(fivesamples,my_prob_13) # apply the function and calculate observed probability for each of your five samples
(0.9 + 0.92 + 0.96 + 0.86 + 0.86) / 5
fivesamples <- data.frame(matrix(rbinom(50*5, size = 35, prob = 0.25), nrow = 50, ncol = 5))
my_prob_13 <- function(x){sum(x<13)/length(x)} # define a function that calculates observed probability for a sample
lapply(fivesamples,my_prob_13) # apply the function and calculate observed probability for each of your five samples
(0.94 + 0.9 + 0.9 + 1 + 0.92) / 5
(0.94 + 0.9 + 0.88 + 0.96 + 0.92) / 5
fivesamples <- data.frame(matrix(rbinom(50*5, size = 35, prob = 0.25), nrow = 50, ncol = 5))
my_prob_13 <- function(x){sum(x<13)/length(x)} # define a function that calculates observed probability for a sample
lapply(fivesamples,my_prob_13) # apply the function and calculate observed probability for each of your five samples
(0.94 + 0.9 + 0.88 + 0.96 + 0.92) / 5
fivesamples <- data.frame(matrix(rbinom(50*5, size = 35, prob = 0.25), nrow = 50, ncol = 5))
my_prob_13 <- function(x){sum(x<13)/length(x)} # define a function that calculates observed probability for a sample
lapply(fivesamples,my_prob_13) # apply the function and calculate observed probability for each of your five samples
(0.94 + 0.9 + 0.88 + 0.96 + 0.92) / 5
fivesamples <- data.frame(matrix(rbinom(50*5, size = 35, prob = 0.25), nrow = 50, ncol = 5))
my_prob_13 <- function(x){sum(x<13)/length(x)} # define a function that calculates observed probability for a sample
lapply(fivesamples,my_prob_13) # apply the function and calculate observed probability for each of your five samples
(0.92 + 0.9 + 0.94 + 0.96 + 0.92) / 5
lapply(fivesamples,mean)
mean(lapply(fivesamples,mean))
lapply(fivesamples,mean)
(8.6 + 8.98 + 8.66 + 8.66 + 8.56) / 5
sampleDist = function(n){
sample(x = c(0,1,2,3,4,5,6,7,8,9), n, replace = T, prob = c(.29,.16,.22,.15,.08,.04,.02,.02,.01,.01))
}
sample_100 <- sampleDist(n)  # modify this to generate a sample of size 100 and store it as an object named sample_100
sampleDist = function(n){
sample(x = c(0,1,2,3,4,5,6,7,8,9), n, replace = T, prob = c(.29,.16,.22,.15,.08,.04,.02,.02,.01,.01))
}
sample_100 <- sampleDist(100)  # modify this to generate a sample of size 100 and store it as an object named sample_100
lapply(sample_100,mean)
lapply(sample_100,var)
mean(sample_100)
sd(sample_100)
gf_histogram(~sample_100)
sample_1000 <- sampleDist(1000)
gf_histogram(sample_1000)
gf_histogram(~sample_1000)
gf_histogram(~sample_1000)
mean(sample_1000)
sd(sample_1000)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) #clear the workspace
library(mosaic)
library(ggformula)
mysample <- rbinom(50, size = 35, prob = 0.25)
mysample
gf_histogram(~mysample)
gf_boxplot(~mysample)
favstats(mysample)
sum(mysample<13)
48 / 50
pbinom(q = 12, size = 35, prob = 0.25) #calculates P(X <= 12), same as P(X<13)
fivesamples <- data.frame(matrix(rbinom(50*5, size = 35, prob = 0.25), nrow = 50, ncol = 5))
my_prob_13 <- function(x){sum(x<13)/length(x)} # define a function that calculates observed probability for a sample
lapply(fivesamples,my_prob_13) # apply the function and calculate observed probability for each of your five samples
(0.94 + 0.92 + 0.92 + 0.96 + 0.92) / 5
lapply(fivesamples,mean)
(8.16 + 8.56 + 8.66 + 8.8 + 8.96) / 5
sampleDist = function(n){
sample(x = c(0,1,2,3,4,5,6,7,8,9), n, replace = T, prob = c(.29,.16,.22,.15,.08,.04,.02,.02,.01,.01))
}
sample_100 <- sampleDist(100)  # modify this to generate a sample of size 100 and store it as an object named sample_100
mean(sample_100)
sd(sample_100)
gf_histogram(~sample_100)
sample_1000 <- sampleDist(1000)
gf_histogram(~sample_1000)
mean(sample_1000)
sd(sample_1000)
exp_sample <- rexp(500, 1/3)
mean(exp_sample)
median(exp_sample)
gf_histogram(~exp_sample)
